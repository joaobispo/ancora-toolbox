annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=Dyma Library
application.vendor=Work
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/dyma-library.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.DymaLibrary-src-backwards=../../src-backwards
file.reference.DymaLibrary-src-base=../../src-base
file.reference.DymaLibrary-src-processors=../../src-processors
file.reference.DymaLibrary-src-test=../../src-test
file.reference.java-base=../../src/java/base
file.reference.java-processors=../../src/java/processors
file.reference.java-test=../../src/java/test
file.reference.java-utils=../../src/java/utils
includes=**
jar.compress=false
javac.classpath=\
    ${reference.Shared_Library.jar}:\
    ${reference.Jani.jar}:\
    ${reference.SharedLibrary_V2.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
project.Jani=../../../../../../SuikaSoft/PrivateRepository/projects/Jani/ide/netbeans-6.9
project.Shared_Library=../../../../projects/shared-library-netbeans6.9
project.SharedLibrary_V2=../../../../../../SuikaSoft/PublicRepository/projects/SharedLibraryV2/ide/netbeans-6.9
reference.Jani.jar=${project.Jani}/dist/Jani.jar
reference.Shared_Library.jar=${project.Shared_Library}/dist/shared-library.jar
reference.SharedLibrary_V2.jar=${project.SharedLibrary_V2}/dist/shared-library-v2.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.base.dir=${file.reference.java-base}
src.processors.dir=${file.reference.java-processors}
src.utils.dir=${file.reference.java-utils}

#License
project.license = specs-apache20
test.test.dir=${file.reference.java-test}
